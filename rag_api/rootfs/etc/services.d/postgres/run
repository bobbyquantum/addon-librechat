#!/usr/bin/with-contenv bashio
# shellcheck shell=bash
set -e

# Check if PostgreSQL data directory is empty
if [ -z "$(ls -A "$PGDATA")" ]; then
    bashio::log.info "Initializing PostgreSQL database..."
    su postgres -c "initdb -D $PGDATA"

    # Enhanced PostgreSQL configuration
    {
        echo "listen_addresses = '*'"  # Listen on all interfaces
        echo "log_destination = 'stderr'"
        echo "logging_collector = on"
        echo "log_directory = 'log'"
        echo "log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'"
        echo "log_rotation_age = 1d"
        echo "log_rotation_size = 10MB"
        echo "log_min_messages = info"
        echo "log_min_error_statement = error"
        echo "log_min_duration_statement = 1000"
        echo "log_connections = on"
        echo "log_disconnections = on"
        echo "log_duration = on"
        echo "log_line_prefix = '%m [%p] %q%u@%d '"
        echo "log_statement = 'all'"
        echo "log_checkpoints = on"
        echo "log_lock_waits = on"
        echo "log_temp_files = 0"
    } >> "$PGDATA/postgresql.conf"

    # Configure authentication
    {
        echo "# TYPE  DATABASE        USER            ADDRESS                 METHOD"
        echo "host    all            all             127.0.0.1/32           md5"
        echo "host    all            all             ::1/128                md5"
        echo "host    all            all             0.0.0.0/0             md5"
        echo "local   all            all                                    trust"
    } > "$PGDATA/pg_hba.conf"

    # Start PostgreSQL temporarily to create database and extension
    su postgres -c "pg_ctl -D $PGDATA -l /var/log/postgresql/postgresql.log start"

    # Wait for PostgreSQL to start
    until su postgres -c "pg_isready" 2>/dev/null; do
        bashio::log.info "Waiting for PostgreSQL to start..."
        sleep 1
    done

    # Set a password for postgres user
    su postgres -c "psql -c \"ALTER USER postgres WITH PASSWORD 'ragapipassword';\""

    # Create database and enable pgvector extension
    su postgres -c "createdb ragapi"
    su postgres -c "psql -d ragapi -c 'CREATE EXTENSION IF NOT EXISTS vector;'"

    # Stop PostgreSQL
    su postgres -c "pg_ctl -D $PGDATA stop"
fi

# Create log directory
mkdir -p "$PGDATA/log"
chown postgres:postgres "$PGDATA/log"

bashio::log.info "Starting PostgreSQL with enhanced logging..."
exec su postgres -c "postgres -D $PGDATA 2>&1 | bashio::log.info"
# Create log directory
mkdir -p "$PGDATA/log"
chown postgres:postgres "$PGDATA/log"

bashio::log.info "Starting PostgreSQL with enhanced logging..."
exec su postgres -c "postgres -D $PGDATA 2>&1 | bashio::log.info"
