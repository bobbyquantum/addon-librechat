#!/usr/bin/with-contenv bashio
# shellcheck shell=bash
set -e

# Wait for PostgreSQL to be ready
bashio::log.info "Waiting for PostgreSQL to be ready..."
until bashio::net.wait_for "${DB_PORT:-5432}" && su postgres -c "pg_isready" 2>/dev/null; do
    bashio::log.info "PostgreSQL is not ready yet. Waiting..."
    sleep 2
done

# Set environment variables for database connection
export POSTGRES_USER="postgres"
export POSTGRES_PASSWORD="ragapipassword"
export POSTGRES_DB="ragapi"
export DB_HOST="localhost"
export DB_PORT="5432"

# Test database connection
bashio::log.info "Testing database connection..."
if PGPASSWORD="ragapipassword" psql -h "${DB_HOST:-localhost}" -U "${POSTGRES_USER:-postgres}" -d "${POSTGRES_DB:-ragapi}" -c '\l' >/dev/null 2>&1; then
    bashio::log.info "Database connection successful."
else
    bashio::log.error "Failed to connect to the database. Check PostgreSQL logs for more information."
    exit 1
fi

# Create uploads directory if it doesn't exist
if [ ! -d "${RAG_UPLOAD_DIR:-/share/rag_api/uploads}" ]; then
    mkdir -p "${RAG_UPLOAD_DIR:-/share/rag_api/uploads}"
fi

# Start the RAG API
bashio::log.info "Starting RAG API..."
cd /app

# Test database more thoroughly with error output
bashio::log.info "Performing final database check..."
if ! db_status=$(PGPASSWORD="ragapipassword" psql -h "${DB_HOST:-localhost}" -U "${POSTGRES_USER:-postgres}" -d "${POSTGRES_DB:-ragapi}" -c '\conninfo' 2>&1); then
    bashio::log.error "Database connection test failed:"
    bashio::log.error "${db_status}"
    exit 1
fi
bashio::log.info "Database connection info: ${db_status}"

exec python main.py 2>&1 | bashio::log.info
